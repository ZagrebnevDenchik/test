<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        4ziO00T8PzLFCZOqOpBNAAAAAElFTkSuQmCC
</value>
  </data>
</root>